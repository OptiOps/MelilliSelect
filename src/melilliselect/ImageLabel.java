/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package melilliselect;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import melilliselect.Models.ImageFileModel;
import static melilliselect.workers.ImageLoaderWorker.getBufferedImage;

/**
 *
 * @author arsam
 */
public class ImageLabel extends javax.swing.JPanel {

    /**
     * Creates new form ImageLabel
     */
    ImageIcon ic;
    String path;
    ImageFileModel ifm;
    ImageIcon heartSelected;
    ImageIcon heartUnSelected;
    ImageIcon diamondSelected;
    ImageIcon diamondUnSelected;

    public ImageLabel(ImageFileModel ifm) {
        initComponents();
        this.ic = ifm.getBufferedImage();
        this.image.setIcon(ic);
        this.imageName.setText(ifm.getName());
        this.path = ifm.getPath();
        this.ifm = ifm;
        heartSelected = new ImageIcon(getClass().getResource("/melilliselect/resources/HeartRed.png"));
        heartUnSelected = new ImageIcon(getClass().getResource("/melilliselect/resources/HeartIcon.png"));
        diamondSelected = new ImageIcon(getClass().getResource("/melilliselect/resources/Diamond.png"));
        diamondUnSelected = new ImageIcon(getClass().getResource("/melilliselect/resources/DiamondIcon.png"));
        checkHeartDiamond();

    }

    public JLabel getImageLabel() {
        return image;
    }

    public void setIcon(ImageIcon ic) {
        this.ic = ic;
        this.image.setIcon(ic);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        heart = new javax.swing.JLabel();
        diamond = new javax.swing.JLabel();
        image = new javax.swing.JLabel();
        imageName = new javax.swing.JLabel();

        setBackground(StaticData.dashboardBackground);
        setPreferredSize(new java.awt.Dimension(150, 156));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        jPanel1.setBackground(null);
        jPanel1.setMinimumSize(new java.awt.Dimension(150, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(137, 100));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        heart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/melilliselect/resources/HeartIcon.png"))); // NOI18N
        heart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                heartMouseClicked(evt);
            }
        });
        jPanel1.add(heart, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 40, 20));

        diamond.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diamond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/melilliselect/resources/DiamondIcon.png"))); // NOI18N
        diamond.setToolTipText("");
        diamond.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diamondMouseClicked(evt);
            }
        });
        jPanel1.add(diamond, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 40, -1));

        image.setBackground(new java.awt.Color(0, 0, 0));
        image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image.setAutoscrolls(true);
        image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageMouseClicked(evt);
            }
        });
        jPanel1.add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 137, 100));

        imageName.setBackground(StaticData.dashboardBackground);
        imageName.setFont(StaticData.font12);
        imageName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageName.setText("image.c");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        setBackground(StaticData.bgSelectedColor);
        jPanel1.setBackground(StaticData.bgSelectedColor);

    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        setBackground(StaticData.dashboardBackground);
        jPanel1.setBackground(StaticData.dashboardBackground);
    }//GEN-LAST:event_formMouseExited

    private void imageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageMouseClicked
        // TODO add your handling code here:
        DisplayImageModal();
    }//GEN-LAST:event_imageMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        DisplayImageModal();
    }//GEN-LAST:event_formMouseClicked

    private void heartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_heartMouseClicked
        // TODO add your handling code here:
       
        ifm.setIsHeart(!ifm.isIsHeart());
         StaticData.sidenav.updateLikeCount(ifm.isIsHeart());
        StaticData.fileManager.recordHeart(ifm.getImageLikeModel());
        checkHeartDiamond();
    }//GEN-LAST:event_heartMouseClicked

    private void diamondMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diamondMouseClicked
        ifm.setIsDiamond(!ifm.isIsDiamond());
        StaticData.sidenav.updateDiamondCount(ifm.isIsDiamond());
        StaticData.fileManager.recordHeart(ifm.getImageLikeModel());
        checkHeartDiamond();
    }//GEN-LAST:event_diamondMouseClicked

    private void checkHeartDiamond() {
        if (ifm.isIsHeart()) {
            heart.setIcon(this.heartSelected);
            diamond.setIcon(this.diamondUnSelected);
            diamond.setVisible(false);
        } else if (ifm.isIsDiamond()) {
            diamond.setIcon(this.diamondSelected);
            heart.setIcon(this.heartUnSelected);
            heart.setVisible(false);
        } else {
            heart.setIcon(this.heartUnSelected);
            diamond.setIcon(this.diamondUnSelected);
            diamond.setVisible(true);
            heart.setVisible(true);

        }
    }

    private void DisplayImageModal() {
        JDialog dialog = new JDialog();

        File cr2File = new File(this.path);
        BufferedImage image;
        try {

            image = getBufferedImage(this.path);
//            image = ImageIO.read(cr2File);
        } catch (IOException ex) {
            image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        }

        int newWidth = MainMenu.screenDimension.width - StaticData.sideNavWidth - 50;
        int newHeight = MainMenu.screenDimension.height - 90 - 50;

        //        dialog.setResizable(true);
        Image scaledImage = image.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);
        BufferedImage thumbnail = new BufferedImage(newWidth, newHeight, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = thumbnail.createGraphics();
        g2d.drawImage(scaledImage, 0, 0, null);
        g2d.dispose();
        JLabel label = new JLabel(new ImageIcon(thumbnail));
        dialog.add(label);
        dialog.pack();
        dialog.setSize(newWidth, newHeight);
        dialog.setLocationRelativeTo(getParent().getParent().getParent());

        dialog.setVisible(true);
//        dialog.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel diamond;
    private javax.swing.JLabel heart;
    private javax.swing.JLabel image;
    private javax.swing.JLabel imageName;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
