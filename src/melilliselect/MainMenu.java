/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package melilliselect;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JFrame;
import javax.swing.JPanel;
import melilliselect.Models.FileManager;

/**
 *
 * @author arsam
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public static Dashboard dashboard;
    public static Dimension screenDimension;

    public MainMenu() {
        setUndecorated(true);
        initComponents();
        try {
            InputStream s = getClass().getResourceAsStream("/melilliselect/resources/Inter.ttf");
            System.out.println(s);
            Font font = Font.createFont(Font.TRUETYPE_FONT, s);
            StaticData.font12 = font.deriveFont(Font.BOLD, 12f);
            StaticData.font10 = font.deriveFont(Font.PLAIN, 10f);
            StaticData.font13 = font.deriveFont(Font.BOLD, 13f);
            StaticData.font15 = font.deriveFont(Font.BOLD, 15f);
            StaticData.font8 = font.deriveFont(Font.PLAIN, 8f);
            StaticData.fileManager.loadDataFromFile();
            StaticData.fileManager.getTotalLiked();
        } catch (FontFormatException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        setSize(1000, 800);
        screenDimension = getSize();
        System.out.println(FileManager.totalLiked);
        StaticData.sidenav = new SideNav();
        add(StaticData.sidenav, BorderLayout.LINE_START);
        dashboard = new Dashboard();
        add(dashboard, BorderLayout.CENTER);

        setLocationRelativeTo(null);
        setOnClickListeners();
        setVisible(true);

        addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent evt) {
                Component c = (Component) evt.getSource();
                screenDimension = c.getSize();
            }
        });
    }

    private void setOnClickListeners() {
        TopNav.maximizeButton.addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maximizeButtonClick(evt);
            }
        });
        TopNav.minimizeButton.addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeButtonClick(evt);
            }
        });
    }

    private void maximizeButtonClick(ActionEvent evt) {
        if (getExtendedState() == NORMAL) {
            setExtendedState(MAXIMIZED_BOTH);

        } else {
            setExtendedState(NORMAL);
        }
    }

    private void minimizeButtonClick(ActionEvent evt) {
        setState(JFrame.ICONIFIED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
